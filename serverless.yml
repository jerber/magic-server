#service: firebase-lambda-test
service: neww-lambda-test

# app and org for use with dashboard.serverless.com
#app: firebase-lambda-test
#org: jerber

provider:
  name: aws
  runtime: python3.8
  timeout: 15
  tracing: # what does this do exactly?
    lambda: true
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: "*"
  environment:
    DOORMAN_PUBLIC_PROJECT_ID: ${env:DOORMAN_PUBLIC_PROJECT_ID}
    FIREBASE_PROJECT_ID: ${env:FIREBASE_PROJECT_ID}
    CLOUD_FUNCTION_LOCATION: ${env:CLOUD_FUNCTION_LOCATION}



functions:
  app:
    handler: main.handler
    warmup: true
    package: {} # https://github.com/serverless/serverless/issues/6752
    events:
      - http: ANY /
      - http:
          path: /{proxy+}
          method: ANY
          contentHandling: CONVERT_TO_BINARY
          request:
            passThrough: WHEN_NO_MATCH

plugins:
  - serverless-python-requirements
  - serverless-apigwy-binary
  - serverless-apigw-binary
  - serverless-dotenv-plugin
  - serverless-plugin-warmup
  - serverless-log-forwarding


package:
  exclude:
    - node_modules/**
    - venv/**
    - env/**
    - magic_venv/**


custom:
  pythonRequirements:
    dockerizePip: non-linux
  apigwBinary: # check if necessary by changing the Mangum binary response: https://mangum.io/http/
    types:
      - '*/*'
  warmup:
    concurrency: 2 # Warm up 5 concurrent instances
    prewarm: true

  logForwarding:
    destinationARN: arn:aws:lambda:us-east-1:444719859866:function:log-forwarder-prod-forwarder
    filterPattern: "-\"[INFO]\" -\"END RequestId: \" -\"REPORT RequestId: \" -\"START RequestId: \""